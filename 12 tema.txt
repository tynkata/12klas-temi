
ПОЗНАВАНЕ НА СРЕДАТА (IDE) – 20 точки
1.1 Интерфейс и навигация (6 т.)
- Разпознава и описва основните панели: Solution Explorer за преглед на файловете и проекти, Output/Terminal за изход от компилации и команди, Error List/Problems за списъка с грешки.
- Използва и обяснява клавишни комбинации за „Go To Definition“, навигация назад/напред между разгледани файлове, търсене на файлове и типове.

1.2 Проектна конфигурация (5 т.)
- Създава C# проект от различни типове (конзолно приложение, уеб приложение, библиотека), обяснява изборa на шаблон и таргет рамка.
- Настройва конфигурации за Debug и Release, аргументи за стартиране и променливи на средата.
- Описва структурата на .csproj и ролята на launch профилите (launchSettings.json).

1.3 Debug & Version Control (9 т.)
- Демонстрира поставяне и управление на breakpoints, стъпково изпълнение, наблюдение на променливи (Locals, Watch, Immediate).
- Обяснява процеса на дебъгване: спиране при грешка, анализ на стека и възстановяване на изпълнението.
- Използва вградената Git интеграция: клониране на репозитории, комит, push/pull, сравняване на версии и връщане към по-стара ревизия.

ПРОДУКТИВНО ПОЛЗВАНЕ НА IDE – 20 точки
2.1 Клавишни комбинации и навигация (6 т.)
- Използва комбинации за коментиране/разкоментиране и бърз достъп до често изпълнявани команди.
- Прилага търсене на действия (Quick Actions) и глобално търсене на файлове, класове и методи („Go To All“).

2.2 Инструменти за писане и поддръжка на код (7 т.)
- Прилага готови code snippets или шаблони за често срещани конструкции (свойства, конструктори и др.).
- Използва инструменти за автоматично форматиране и почистване на кода (Code Cleanup), включително премахване на неизползвани препратки.
- Извършва рефакторинг без нарушаване на функционалността: преименуване на методи и променливи, извличане на методи и променливи.

2.3 Изпълнение и тестване (7 т.)
- Конфигурира и стартира приложението или тестовете директно от IDE, наблюдава изхода и грешките в конзолата.
- Използва Test Explorer за откриване, стартиране и анализ на Unit тестове (MSTest, NUnit, xUnit) и отчитане на покритието на кода.

РАБОТА С ВЪНШНИ БИБЛИОТЕКИ И ПАКЕТИ – 20 точки
3.1 Инсталация и управление на зависимости (7 т.)
- Добавя пакети чрез NuGet Package Manager както през графичния интерфейс, така и чрез конзолни команди.
- Избира подходяща версия на библиотеката, съобразена с таргет рамката (.NET 6, .NET 7 и др.), и описва причините за избора.

3.2 Импорт и използване в кода (7 т.)
- Внася необходимите пространства от имена (namespaces) и извиква ключови функции или методи, предоставени от пакета.
- Настройва конфигурации, свързани с библиотеката, като API ключове, логиране или други параметри.

3.3 Документация и обосновка (6 т.)
- В кратък коментар или в README описва защо е включена дадената библиотека и как улеснява решаването на конкретен проблем.
- Показва, че е проучил документацията на библиотеката и разбира основните ѝ възможности и ограничения.

ЧЕКЛИСТ ЗА ПОДГОТОВКА
Интерфейс и навигация

Прегледай всички панели в IDE (Solution Explorer, Output, Error List, Terminal).

Практикувай „Go To Definition“, навигация назад/напред и глобално търсене.

Проект и дебъг

Създай малък C# проект и настрой Debug/Release профили.

Постави breakpoints, стартирай стъпково и разгледай променливите в Locals и Watch.

Git интеграция

Клонирай публично репо, направи промени, комитни и пушни, и експериментирай с връщане към предишна версия.

Работа с код

Научи и практикувай основни snippets и code cleanup/refactoring операции.

Увери се, че форматът на кода е последователен и без излишни импорти.

Unit тестове

Добави и стартирай поне 3-4 Unit теста през Test Explorer.

Проверявай резултатите и покритието.

NuGet пакети

Инсталирай поне една библиотека чрез NuGet, използвай я в кода и опиши в коментар защо я избираш.

Провери документация и експериментирай с конфигурационни настройки.